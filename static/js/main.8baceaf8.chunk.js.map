{"version":3,"sources":["Components/card/card.jsx","Components/card-list/card-list.jsx","Components/search-box/search-box.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","Searchbox","placeholder","handleChange","type","onChange","APP","e","setState","searchfield","target","value","state","fetch","then","res","json","users","this","filterdmonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"mRAEaA,G,MAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCFbC,G,MAAW,SAACR,GACrB,OACI,yBAAKC,UAAU,aAEPD,EAAMS,SAASC,KAAI,SAACN,GAAD,OACf,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCHvCQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,2BAAOb,UAAU,SACjBc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BCG,G,wDAjCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAMnC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC7CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAClD,OACE,yBAAK/B,UAAU,OACb,+CACA,kBAAC,EAAD,CACAY,YAAY,kBACZC,aAAce,KAAKf,eACnB,kBAAC,EAAD,CAAUL,SAAUqB,S,GA3BVI,cCAlBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.8baceaf8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css'\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card'\r\nimport './card-list.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map((monster) => (\r\n                    <Card key={monster.id} monster={monster}></Card>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n        }","\r\n\r\nimport React from 'react';\r\n\r\nimport './search-box.css';\r\n\r\nexport const Searchbox = ({placeholder,handleChange}) => (\r\n    <input className=\"search\" \r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)\r\n","import React, { Component } from 'react';\nimport { CardList } from './Components/card-list/card-list'\nimport {Searchbox} from './Components/search-box/search-box'\nimport './App.css'\n\nclass APP extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchfield: ''\n    };\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = e => {\n    this.setState({searchfield:e.target.value})\n  }\n\n  render() {\n    const { monsters, searchfield } = this.state;\n    const filterdmonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <Searchbox \n        placeholder='search monsters'\n        handleChange={this.handleChange}/>\n        <CardList monsters={filterdmonsters}>\n        </CardList>\n\n      </div>\n    )\n  }\n}\nexport default APP;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport APP from './App';\n\n\nReactDOM.render(\n    <APP />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}